<!-- launch/pointcloud_map_builder.launch -->
<launch>
    <!-- 点云动态滤除节点 -->
    <node name="dynamic_point_remover" pkg="pointcloud_mapping" type="dynamic_point_remover.py" output="screen">
        <!-- 输入点云话题 -->
        <param name="input_topic" value="/transformed_pointcloud" />
        <!-- 输出滤除后的点云话题 -->
        <param name="output_topic" value="/filtered_pointcloud" />
    </node>

    <!-- 点云地图构建节点 -->
    <node name="pointcloud_map_builder" pkg="pointcloud_mapping" type="pointcloud_map_builder.py" output="screen">
        <!-- 基本话题配置 -->
        <param name="input_topic" value="/filtered_pointcloud" />
        <param name="output_topic" value="/accumulated_map" />
        <param name="map_frame" value="map" />
        
        <!-- 拼接策略配置 -->
        <param name="save_mode" value="time" />  <!-- 'time' 或 'frame' -->
        <param name="time_interval" value="2.0" />  <!-- 时间间隔（秒） -->
        <param name="frame_interval" value="5" />   <!-- 帧数间隔 -->
        
        <!-- 地图管理配置 -->
        <param name="max_map_points" value="1000000" />  <!-- 最大地图点数 -->
        <param name="voxel_size" value="0.05" />         <!-- 体素滤波大小 -->
        <param name="enable_voxel_filter" value="true" />
        
        <!-- 地图质量配置 -->
        <param name="min_points_threshold" value="100" />  <!-- 最小点数阈值 -->
        <param name="max_distance" value="50.0" />         <!-- 最大距离阈值 -->
        
        <!-- 地图保存配置 -->
        <param name="save_directory" value="~/pointcloud_maps" />
        <param name="map_name" value="accumulated_map" />
    </node>
    
    <!-- 可选：启动RViz可视化
    <node name="rviz" pkg="rviz" type="rviz" args="-d $(find pointcloud_mapping)/rviz/map_builder.rviz" if="$(arg rviz)" />
    <arg name="rviz" default="false" /> -->
</launch>


<!-- 使用配置文件的启动方式 -->
<!--
<launch>
    <rosparam file="$(find pointcloud_mapping)/config/map_builder_config.yaml" command="load" />
    <node name="pointcloud_map_builder" pkg="pointcloud_mapping" type="pointcloud_map_builder.py" output="screen" />
</launch>
-->